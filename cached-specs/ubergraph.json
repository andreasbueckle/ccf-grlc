{
    "openapi": "3.0.0",
    "info": {
        "contact": {
            "name": "hubmapconsortium",
            "url": "https://github.com/hubmapconsortium"
        },
        "description": "ccf-grlc: Useful SPARQL queries for HRA work + API via grlc.io",
        "license": {
            "name": "License",
            "url": "https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/LICENSE"
        },
        "title": "ccf-grlc",
        "version": "0246c5e7f63021cc1a8ee04c60f11908ee006dff"
    },
    "paths": {
        "/cell_by_location": {
            "get": {
                "description": "Enter an anatomical location, get back a list of cell type IRIs and labels\n\n```\n#+ summary: Find cells by location\n#+ description: Enter an anatomical location, get back a list of cell type IRIs and labels\n\n#+ defaults:\n#+   - location: http://purl.obolibrary.org/obo/UBERON_0002113\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX overlaps: <http://purl.obolibrary.org/obo/RO_0002131>\nPREFIX cell: <http://purl.obolibrary.org/obo/CL_0000000>\n\nSELECT DISTINCT ?cell_iri (STR(?qlabel) as ?cell_label)\nWHERE {\n   ?cell_iri overlaps: ?_location_iri .\n   ?cell_iri rdfs:subClassOf cell: .\n   ?cell_iri rdfs:label ?qlabel .\n  }\n\n\n\n```",
                "parameters": [
                    {
                        "description": "Alternative endpoint for SPARQL query",
                        "in": "query",
                        "name": "endpoint",
                        "schema": {
                            "type": "string",
                            "default": "https://ubergraph.apps.renci.org/sparql"
                        }
                    },
                    {
                        "description": "A value of type string (iri) that will substitute ?_location_iri in the original query",
                        "in": "query",
                        "name": "location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "iri",
                            "default": "http://purl.obolibrary.org/obo/UBERON_0002113"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query response",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                },
                "summary": "Find cells by location",
                "tags": []
            }
        },
        "/cl_parents": {
            "get": {
                "description": "Get back a list of cell types and parent cell type IRIs and labels\n\n```\n#+ summary: Find cell parent classes\n#+ description: Get back a list of cell types and parent cell type IRIs and labels\n\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX overlaps: <http://purl.obolibrary.org/obo/RO_0002131>\nPREFIX cell: <http://purl.obolibrary.org/obo/CL_0000000>\n\nSELECT DISTINCT ?cell ?cell_label ?parent_cell ?parent_label\nWHERE { \n    ?cell rdfs:label ?cell_label .\n    ?cell rdfs:subClassOf cell: .\n    ?cell rdfs:subClassOf ?parent_cell .\n    ?parent_cell rdfs:subClassOf cell: .\n    ?parent_cell rdfs:label ?parent_label .\n}\n\n```",
                "parameters": [
                    {
                        "description": "Alternative endpoint for SPARQL query",
                        "in": "query",
                        "name": "endpoint",
                        "schema": {
                            "type": "string",
                            "default": "https://ubergraph.apps.renci.org/sparql"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query response",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                },
                "summary": "Find cell parent classes",
                "tags": []
            }
        },
        "/cl_parents_by_label": {
            "get": {
                "description": "Enter a cell type rdfs label, get back a list of parent cell type IRIs and labels\n\n```\n#+ summary: Find cell parent classes by label\n#+ description: Enter a cell type rdfs label, get back a list of parent cell type IRIs and labels\n\n#+ defaults:\n#+   - label: \"mature B cell\"\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX overlaps: <http://purl.obolibrary.org/obo/RO_0002131>\nPREFIX cell: <http://purl.obolibrary.org/obo/CL_0000000>\n\nSELECT *\nWHERE {\n  {\n    {\n      SELECT DISTINCT ?cell ?cell_label ?parent_cell ?parent_label\n      WHERE { \n        ?cell rdfs:label ?cell_label .\n        ?cell rdfs:subClassOf cell: .\n        ?cell rdfs:subClassOf ?parent_cell .\n        ?parent_cell rdfs:subClassOf cell: .\n        ?parent_cell rdfs:label ?parent_label .\n      }\n    }\n  }\n  FILTER( STR(?cell_label) = ?_label ) .\n}\n\n```",
                "parameters": [
                    {
                        "description": "Alternative endpoint for SPARQL query",
                        "in": "query",
                        "name": "endpoint",
                        "schema": {
                            "type": "string",
                            "default": "https://ubergraph.apps.renci.org/sparql"
                        }
                    },
                    {
                        "description": "A value of type string that will substitute ?_label in the original query",
                        "in": "query",
                        "name": "label",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "mature B cell"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query response",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                },
                "summary": "Find cell parent classes by label",
                "tags": []
            }
        }
    },
    "prev_commit": "141333faf2b2bd1656c44a00fdef1c6b1ad17bcc",
    "prov": "@prefix prov: <http://www.w3.org/ns/prov#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n<http://grlc.io/api/hubmapconsortium/ccf-grlc/spec> a prov:Entity ;\n    prov:generatedAtTime \"2024-08-29T15:25:14.041849\"^^xsd:dateTime ;\n    prov:wasAttributedTo <http://grlc.io> ;\n    prov:wasGeneratedBy <http://grlc.io/api/hubmapconsortium/ccf-grlc/spec-activity> .\n\n<http://localhost/#commit-01e07cdaf43fb37cc62a8bf78c70e24f03415794> a prov:Activity ;\n    prov:endedAtTime \"2024-08-23T14:53:24+00:00\"^^xsd:dateTime .\n\n<http://grlc.io/api/hubmapconsortium/ccf-grlc/spec-activity> a prov:Activity ;\n    prov:endedAtTime \"2024-08-29T15:25:14.041849\"^^xsd:dateTime ;\n    prov:startedAtTime \"2024-08-29T15:25:00.815367\"^^xsd:dateTime ;\n    prov:used <https://api.github.com/repos/hubmapconsortium/ccf-grlc>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cell_by_location.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cl_parents.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cl_parents_by_label.rq> ;\n    prov:wasAssociatedWith <http://grlc.io> .\n\n<https://api.github.com/repos/hubmapconsortium/ccf-grlc> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cell_by_location.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cl_parents.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/ubergraph/cl_parents_by_label.rq> a prov:Entity .\n\n<http://grlc.io> a prov:Agent .\n\n[] a prov:Association ;\n    prov:agent <http://localhost/#user-bherr2> ;\n    prov:hadRole \"author\"@en .\n\n[] a prov:Association ;\n    prov:agent <http://localhost/#user-github-actions> .\n\n",
    "servers": [
        {
            "url": "https://grlc.io/api-git/hubmapconsortium/ccf-grlc/subdir/ubergraph/"
        }
    ],
    "components": {
        "schemas": {
            "Message": {
                "type": "string"
            }
        }
    }
}