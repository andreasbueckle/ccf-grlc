{"basePath":"/api-git/hubmapconsortium/ccf-grlc/subdir/butterfly//","definitions":{"Message":{"type":"string"}},"host":"grlc.io","info":{"contact":{"name":"hubmapconsortium","url":"https://github.com/hubmapconsortium"},"description":"ccf-grlc: Useful SPARQL queries for HRA work + API via grlc.io","license":{"name":"License","url":"https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/LICENSE"},"title":"ccf-grlc","version":"471203033252018a8b8f7f702ccdb0aaae8dd0fd"},"next_commit":null,"paths":{"/asct-edges":{"get":{"description":"\n\n```\n#+ summary: AS-CT Edges\n\nPREFIX hint: <http://www.bigdata.com/queryHints#> \nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX HRA: <https://purl.humanatlas.io/collection/hra-api>\n\nSELECT ?organ ?source ?target ?source_type ?target_type\nWHERE {\n  hint:Query hint:optimizer \"Runtime\" .\n\n  {\n    SELECT DISTINCT ?graph ?organ\n    WHERE {\n      GRAPH HRA: {\n        HRA: a owl:Ontology ;\n          prov:hadMember ?versionedGraph .\n        FILTER(STRSTARTS(STR(?versionedGraph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      GRAPH ?namedGraph {\n        ?graph a owl:Ontology .\n        FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      FILTER(STRSTARTS(STR(?versionedGraph), STR(?graph)))\n      BIND(REPLACE(REPLACE(STR(?graph), 'https://purl.humanatlas.io/asct-b/', ''), '-', '_') as ?organ)\n    }\n  }\n\n  GRAPH ?graph {\n    {\n      ?source ccf:ccf_part_of ?target .\n\n      ?source ccf:ccf_asctb_type ?source_type .\n      FILTER(?source_type = 'AS')\n      ?target ccf:ccf_asctb_type ?target_type .\n      FILTER(?target_type = 'AS')\n    }\n    UNION\n    {\n      ?source ccf:ccf_located_in ?target .\n\n      ?source ccf:ccf_asctb_type ?source_type .\n      FILTER(?source_type = 'CT')\n      ?target ccf:ccf_asctb_type ?target_type .\n      FILTER(?target_type = 'AS')\n    }\n    FILTER(?source != ?target)\n  }\n  FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n}\nORDER BY ?organ ?source ?target\n\n```","parameters":[{"default":"https://lod.humanatlas.io/sparql","description":"Alternative endpoint for SPARQL query","in":"query","name":"endpoint","type":"string"}],"produces":["text/csv","application/json","text/html"],"responses":{"200":{"description":"Query response","schema":{"items":{"properties":null,"type":"object"},"type":"array"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Message"}}},"summary":"AS-CT Edges","tags":[]}},"/asct-edges-bfs":{"get":{"description":"\n\n```\n#+ summary: AS-CT Edges (with BFS partonomy)\n\nPREFIX gas: <http://www.bigdata.com/rdf/gas#>\nPREFIX hint: <http://www.bigdata.com/queryHints#> \nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX HRA: <https://purl.humanatlas.io/collection/hra-api>\nPREFIX body: <http://purl.obolibrary.org/obo/UBERON_0013702>\n\nSELECT ?organ ?source ?target ?source_type ?target_type\nWHERE {\n  hint:Query hint:optimizer \"Runtime\" .\n\n  {\n    SELECT DISTINCT ?graph ?organ\n    WHERE {\n      GRAPH HRA: {\n        HRA: a owl:Ontology ;\n          prov:hadMember ?versionedGraph .\n        FILTER(STRSTARTS(STR(?versionedGraph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      GRAPH ?namedGraph {\n        ?graph a owl:Ontology .\n        FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      FILTER(STRSTARTS(STR(?versionedGraph), STR(?graph)))\n      BIND(REPLACE(REPLACE(STR(?graph), 'https://purl.humanatlas.io/asct-b/', ''), '-', '_') as ?organ)\n    }\n  }\n\n  GRAPH ?graph {\n    {\n      ?source ccf:ccf_part_of ?target .\n\n      # Use Breadth-First Search to ensure the returned partonomy is a tree\n      {\n        SELECT DISTINCT ?source ?target \n        WHERE {\n          ?source ccf:ccf_asctb_type ?source_type .\n          ?target ccf:ccf_asctb_type ?target_type .\n          FILTER(?source_type = 'AS' && ?target_type = 'AS')\n\n          SERVICE gas:service {\n            gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" .\n            gas:program gas:in body: .\n            gas:program gas:linkType ccf:ccf_part_of .\n            gas:program gas:traversalDirection 'Reverse' .\n            gas:program gas:out ?source .\n            gas:program gas:out1 ?depth .\n            gas:program gas:out2 ?target .\n          }\n        }\n      }\n    }\n    UNION\n    {\n      ?source ccf:ccf_located_in ?target .\n\n      ?source ccf:ccf_asctb_type ?source_type .\n      ?target ccf:ccf_asctb_type ?target_type .\n      FILTER(?source_type = 'CT' && ?target_type = 'AS')\n    }\n    FILTER(?source != ?target)    \n  }\n  FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n}\nORDER BY ?organ ?source ?target\n\n```","parameters":[{"default":"https://lod.humanatlas.io/sparql","description":"Alternative endpoint for SPARQL query","in":"query","name":"endpoint","type":"string"}],"produces":["text/csv","application/json","text/html"],"responses":{"200":{"description":"Query response","schema":{"items":{"properties":null,"type":"object"},"type":"array"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Message"}}},"summary":"AS-CT Edges (with BFS partonomy)","tags":[]}},"/asct-edges-uniq":{"get":{"description":"\n\n```\n#+ summary: AS-CT Edges (unique edges)\n\nPREFIX hint: <http://www.bigdata.com/queryHints#> \nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX HRA: <https://purl.humanatlas.io/collection/hra-api>\n\nSELECT (GROUP_CONCAT(?organ;SEPARATOR='|') as ?organ)\n  ?source ?target\n  (SAMPLE(?source_type) as ?source_type)\n  (SAMPLE(?target_type) as ?target_type)\nWHERE {\n  hint:Query hint:optimizer \"Runtime\" .\n\n  {\n    SELECT ?organ ?source ?target\n      (SAMPLE(?source_type) as ?source_type)\n      (SAMPLE(?target_type) as ?target_type)\n    WHERE {\n      {\n        SELECT DISTINCT ?graph ?organ\n        WHERE {\n          GRAPH HRA: {\n            HRA: a owl:Ontology ;\n              prov:hadMember ?versionedGraph .\n            FILTER(STRSTARTS(STR(?versionedGraph), 'https://purl.humanatlas.io/asct-b/'))\n          }\n          GRAPH ?namedGraph {\n            ?graph a owl:Ontology .\n            FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n          }\n          FILTER(STRSTARTS(STR(?versionedGraph), STR(?graph)))\n          BIND(REPLACE(REPLACE(STR(?graph), 'https://purl.humanatlas.io/asct-b/', ''), '-', '_') as ?organ)\n        }\n      }\n\n      GRAPH ?graph {\n        {\n          ?source ccf:ccf_part_of ?target .\n\n          ?source ccf:ccf_asctb_type ?source_type .\n          FILTER(?source_type = 'AS')\n          ?target ccf:ccf_asctb_type ?target_type .\n          FILTER(?target_type = 'AS')\n        }\n        UNION\n        {\n          ?source ccf:ccf_located_in ?target .\n\n          ?source ccf:ccf_asctb_type ?source_type .\n          FILTER(?source_type = 'CT')\n          ?target ccf:ccf_asctb_type ?target_type .\n          FILTER(?target_type = 'AS')\n        }\n        FILTER(?source != ?target)        \n      }\n      FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n    }\n    GROUP BY ?organ ?source ?target\n  }\n}\nGROUP BY ?source ?target\n\n```","parameters":[{"default":"https://lod.humanatlas.io/sparql","description":"Alternative endpoint for SPARQL query","in":"query","name":"endpoint","type":"string"}],"produces":["text/csv","application/json","text/html"],"responses":{"200":{"description":"Query response","schema":{"items":{"properties":null,"type":"object"},"type":"array"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Message"}}},"summary":"AS-CT Edges (unique edges)","tags":[]}},"/asct-nodes":{"get":{"description":"\n\n```\n#+ summary: AS-CT Nodes\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX UBERON: <http://purl.obolibrary.org/obo/UBERON_>\nPREFIX CL: <http://purl.obolibrary.org/obo/CL_>\nPREFIX PCL: <http://purl.obolibrary.org/obo/PCL_>\nPREFIX FMA: <http://purl.org/sig/ont/fma/fma>\nPREFIX ASCTB-TEMP: <https://purl.org/ccf/ASCTB-TEMP_>\nPREFIX LMHA: <http://purl.obolibrary.org/obo/LMHA_>\nPREFIX HRA: <https://purl.humanatlas.io/collection/hra-api>\n\nSELECT DISTINCT ?id ?name ?type ?organ ?ontology_id\nWHERE {\n  {\n    SELECT ?id (SAMPLE(?name) as ?name) ?type ?ontology_id\n    WHERE {\n      GRAPH HRA: {\n        # get ID and ASCT+B type, limit to AS + CT\n        ?id ccf:ccf_asctb_type ?type .\n        FILTER(?type != 'BM')\n\n        # Reformat URI to a shorter CURIE string, eg UBERON:12345\n        BIND(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(STR(?id), \n          STR(UBERON:), 'UBERON:'), STR(CL:), 'CL:'), STR(PCL:), 'PCL:'),\n          STR(FMA:), 'FMA:'), STR(LMHA:), 'LMHA:'), STR(ASCTB-TEMP:), 'ASCTB-TEMP:') as ?ontology_id)\n\n        # Grab possible labels and create the node name\n        OPTIONAL {\n          ?id rdfs:label ?rdfs_label .\n        }\n        OPTIONAL {\n          ?id skos:prefLabel ?pref_label .\n        }\n        OPTIONAL {\n          ?id ccf:ccf_pref_label ?ccf_pref_label .\n        }\n        BIND(IF(BOUND(?pref_label), ?pref_label,\n          IF(BOUND(?ccf_pref_label), ?ccf_pref_label,\n            IF(BOUND(?rdfs_label), ?rdfs_label, \n              IF(STRSTARTS(?ontology_id, 'ASCTB-TEMP:'), REPLACE(REPLACE(?ontology_id, 'ASCTB-TEMP:', ''), '-', ' '),\n                ?ontology_id)))) as ?name)\n      }\n    }\n    GROUP BY ?id ?type ?ontology_id\n  }\n\n  {\n    SELECT DISTINCT ?graph ?organ\n    WHERE {\n      GRAPH HRA: {\n        HRA: a owl:Ontology ;\n          prov:hadMember ?versionedGraph .\n        FILTER(STRSTARTS(STR(?versionedGraph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      GRAPH ?namedGraph {\n        ?graph a owl:Ontology .\n        FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n      }\n      FILTER(STRSTARTS(STR(?versionedGraph), STR(?graph)))\n      BIND(REPLACE(REPLACE(STR(?graph), 'https://purl.humanatlas.io/asct-b/', ''), '-', '_') as ?organ)\n    }\n  }\n\n  GRAPH ?graph {\n    {\n      [] ccf:ccf_part_of ?id .\n    }\n    UNION\n    {\n      ?id ccf:ccf_part_of [] .\n    }\n    UNION\n    {\n      ?id ccf:ccf_located_in [] .\n    }\n    UNION\n    {\n      [] ccf:ccf_located_in ?id .\n    }\n  }\n}\nORDER BY ?organ ?name\n\n```","parameters":[{"default":"https://lod.humanatlas.io/sparql","description":"Alternative endpoint for SPARQL query","in":"query","name":"endpoint","type":"string"}],"produces":["text/csv","application/json","text/html"],"responses":{"200":{"description":"Query response","schema":{"items":{"properties":null,"type":"object"},"type":"array"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Message"}}},"summary":"AS-CT Nodes","tags":[]}},"/asct-nodes-uniq":{"get":{"description":"\n\n```\n#+ summary: AS-CT Nodes (unique nodes)\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX UBERON: <http://purl.obolibrary.org/obo/UBERON_>\nPREFIX CL: <http://purl.obolibrary.org/obo/CL_>\nPREFIX PCL: <http://purl.obolibrary.org/obo/PCL_>\nPREFIX FMA: <http://purl.org/sig/ont/fma/fma>\nPREFIX ASCTB-TEMP: <https://purl.org/ccf/ASCTB-TEMP_>\nPREFIX LMHA: <http://purl.obolibrary.org/obo/LMHA_>\nPREFIX HRA: <https://purl.humanatlas.io/collection/hra-api>\n\nSELECT DISTINCT ?id\n  (SAMPLE(?name) as ?name)\n  (SAMPLE(?type) as ?type)\n  (GROUP_CONCAT(?organ;SEPARATOR='|') as ?organ)\n  (SAMPLE(?ontology_id) as ?ontology_id)\nWHERE {\n  {\n    SELECT DISTINCT ?id ?organ (SAMPLE(?name) as ?name) (SAMPLE(?type) as ?type) (SAMPLE(?ontology_id) as ?ontology_id)\n    WHERE {\n      GRAPH HRA: {\n        # get ID and ASCT+B type, limit to AS + CT\n        ?id ccf:ccf_asctb_type ?type .\n        FILTER(?type != 'BM')\n\n        # Reformat URI to a shorter CURIE string, eg UBERON:12345\n        BIND(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(STR(?id), \n          STR(UBERON:), 'UBERON:'), STR(CL:), 'CL:'), STR(PCL:), 'PCL:'),\n          STR(FMA:), 'FMA:'), STR(LMHA:), 'LMHA:'), STR(ASCTB-TEMP:), 'ASCTB-TEMP:') as ?ontology_id)\n\n        # Grab possible labels and create the node name\n        OPTIONAL {\n          ?id rdfs:label ?rdfs_label .\n        }\n        OPTIONAL {\n          ?id skos:prefLabel ?pref_label .\n        }\n        OPTIONAL {\n          ?id ccf:ccf_pref_label ?ccf_pref_label .\n        }\n        BIND(IF(BOUND(?pref_label), ?pref_label,\n          IF(BOUND(?ccf_pref_label), ?ccf_pref_label,\n            IF(BOUND(?rdfs_label), ?rdfs_label, \n              IF(STRSTARTS(?ontology_id, 'ASCTB-TEMP:'), REPLACE(REPLACE(?ontology_id, 'ASCTB-TEMP:', ''), '-', ' '),\n                ?ontology_id)))) as ?name)\n      }\n\n      {\n        SELECT DISTINCT ?graph ?organ\n        WHERE {\n          GRAPH HRA: {\n            HRA: a owl:Ontology ;\n              prov:hadMember ?versionedGraph .\n            FILTER(STRSTARTS(STR(?versionedGraph), 'https://purl.humanatlas.io/asct-b/'))\n          }\n          GRAPH ?namedGraph {\n            ?graph a owl:Ontology .\n            FILTER(STRSTARTS(STR(?graph), 'https://purl.humanatlas.io/asct-b/'))\n          }\n          FILTER(STRSTARTS(STR(?versionedGraph), STR(?graph)))\n          BIND(REPLACE(REPLACE(STR(?graph), 'https://purl.humanatlas.io/asct-b/', ''), '-', '_') as ?organ)\n        }\n      }\n\n      GRAPH ?graph {\n        {\n          [] ccf:ccf_part_of ?id .\n        }\n        UNION\n        {\n          ?id ccf:ccf_part_of [] .\n        }\n        UNION\n        {\n          ?id ccf:ccf_located_in [] .\n        }\n        UNION\n        {\n          [] ccf:ccf_located_in ?id .\n        }\n      }\n    }\n    GROUP BY ?id ?organ\n  }\n}\nGROUP BY ?id\nORDER BY ?name\n\n```","parameters":[{"default":"https://lod.humanatlas.io/sparql","description":"Alternative endpoint for SPARQL query","in":"query","name":"endpoint","type":"string"}],"produces":["text/csv","application/json","text/html"],"responses":{"200":{"description":"Query response","schema":{"items":{"properties":null,"type":"object"},"type":"array"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Message"}}},"summary":"AS-CT Nodes (unique nodes)","tags":[]}}},"prev_commit":"01e07cdaf43fb37cc62a8bf78c70e24f03415794","prov":"@prefix prov: <http://www.w3.org/ns/prov#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n<http://grlc.io/api/hubmapconsortium/ccf-grlc/spec> a prov:Entity ;\n    prov:generatedAtTime \"2024-08-23T15:05:45.460476\"^^xsd:dateTime ;\n    prov:wasAttributedTo <http://grlc.io> ;\n    prov:wasGeneratedBy <http://grlc.io/api/hubmapconsortium/ccf-grlc/spec-activity> .\n\n<http://localhost/#commit-01e07cdaf43fb37cc62a8bf78c70e24f03415794> a prov:Activity ;\n    prov:endedAtTime \"2024-08-23T14:53:24+00:00\"^^xsd:dateTime .\n\n<http://grlc.io/api/hubmapconsortium/ccf-grlc/spec-activity> a prov:Activity ;\n    prov:endedAtTime \"2024-08-23T15:05:45.460476\"^^xsd:dateTime ;\n    prov:startedAtTime \"2024-08-23T15:05:28.194732\"^^xsd:dateTime ;\n    prov:used <https://api.github.com/repos/hubmapconsortium/ccf-grlc>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges-bfs.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges-uniq.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-nodes-uniq.rq>,\n        <https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-nodes.rq> ;\n    prov:wasAssociatedWith <http://grlc.io> .\n\n<https://api.github.com/repos/hubmapconsortium/ccf-grlc> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges-bfs.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges-uniq.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-edges.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-nodes-uniq.rq> a prov:Entity .\n\n<https://raw.githubusercontent.com/hubmapconsortium/ccf-grlc/main/butterfly/asct-nodes.rq> a prov:Entity .\n\n<http://grlc.io> a prov:Agent .\n\n[] a prov:Association ;\n    prov:agent <http://localhost/#user-bherr2> ;\n    prov:hadRole \"author\"@en .\n\n[] a prov:Association ;\n    prov:agent <http://localhost/#user-github-actions> .\n\n","schemes":[],"swagger":"2.0"}
